{"version":3,"file":"public/js/app.js","sources":["app/app.js","app/js/controllers/AppCtrl.js","app/js/controllers/ModalCtrl.js","app/js/controllers/MyCtrl.js","app/js/controllers/TodoCtrl.js","app/js/directives/appVersion.js","app/js/filters/interpolate.js","app/js/services/version.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCxBA;AACA;AACA;CCFA;AACA;AACA;CCFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;CCTA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["'use strict';\n\n// Declare app level module which depends on filters, and services\nvar App = angular.module('app', ['ngSanitize', 'ngResource', 'ui.router', 'oc.modal']).config(['$stateProvider', '$locationProvider', '$urlRouterProvider', function($stateProvider, $locationProvider, $urlRouterProvider) {\n\t$locationProvider.hashPrefix('!');\n\t$urlRouterProvider.otherwise(\"/todo\");\n\n\t$stateProvider.state('todo', {\n\t\turl: \"/todo\", // root route\n\t\tviews: {\n\t\t\t\"mainView\": {\n\t\t\t\ttemplateUrl: \"partials/todo.html\",\n\t\t\t\tcontroller: 'TodoCtrl'\n\t\t\t}\n\t\t}\n\t}).state('view', {\n\t\turl: \"/view\",\n\t\tviews: {\n\t\t\t\"mainView\": {\n\t\t\t\ttemplateUrl: \"partials/partial.html\",\n\t\t\t\tcontroller: 'MyCtrl'\n\t\t\t}\n\t\t}\n\t});\n\n\t// Without server side support html5 must be disabled.\n\treturn $locationProvider.html5Mode(false);\n}]);","App.controller('AppCtrl', [\n\t'$scope', '$location', '$resource', '$rootScope', function($scope, $location, $resource, $rootScope) {\n\t\t// Uses the url to determine if the selected\n\t\t// menu item should have the class active.\n\t\t$scope.$location = $location;\n\t\t$scope.$watch('$location.path()', function(path) {\n\t\t\treturn $scope.activeNavId = path || '/';\n\t\t});\n\t\t/* getClass compares the current url with the id.\n\t\t * If the current url starts with the id it returns 'active'\n\t\t * otherwise it will return '' an empty string. E.g.\n\t\t *\n\t\t *   # current url = '/products/1'\n\t\t *   getClass('/products') # returns 'active'\n\t\t *   getClass('/orders') # returns ''\n\t\t */\n\t\treturn $scope.getClass = function(id) {\n\t\t\tif($scope.activeNavId.substring(0, id.length) === id) {\n\t\t\t\treturn 'active';\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t};\n\t}\n])","App.controller('ModalCtrl', ['$scope', function($scope) {\n\tconsole.log('modal ctrl');\n}]);","App.controller('MyCtrl', ['$scope', function($scope) {\n\t$scope.onePlusOne = 2;\n}]);","App.controller('TodoCtrl', ['$scope', function($scope) {\n\t$scope.todos = [{\n\t\ttext: \"learn angular\",\n\t\tdone: true\n\t}, {\n\t\ttext: \"build an angular app\",\n\t\tdone: false\n\t}];\n\t$scope.addTodo = function() {\n\t\t$scope.todos.push({\n\t\t\ttext: $scope.todoText,\n\t\t\tdone: false\n\t\t});\n\t\treturn $scope.todoText = \"\";\n\t};\n\t$scope.remaining = function() {\n\t\tvar count;\n\t\tcount = 0;\n\t\tangular.forEach($scope.todos, function(todo) {\n\t\t\treturn count += (todo.done ? 0 : 1);\n\t\t});\n\t\treturn count;\n\t};\n\treturn $scope.archive = function() {\n\t\tvar oldTodos;\n\t\toldTodos = $scope.todos;\n\t\t$scope.todos = [];\n\t\treturn angular.forEach(oldTodos, function(todo) {\n\t\t\tif(!todo.done) {\n\t\t\t\treturn $scope.todos.push(todo);\n\t\t\t}\n\t\t});\n\t};\n}]);","'use strict';\n/* Directives*/\n\n// register the module with Angular\nApp.directive('appVersion', [ // require the 'app.service' module\n\t'version', function(version) {\n\t\treturn function(scope, elm, attrs) {\n\t\t\treturn elm.text(version);\n\t\t};\n\t}\n]);","'use strict';\n/* Filters*/\n\nApp.filter('interpolate', [\n\t'version', function(version) {\n\t\treturn function(text) {\n\t\t\treturn String(text).replace(/\\%VERSION\\%/mg, version);\n\t\t};\n\t}\n]);","'use strict';\n/* Sevices*/\n\nApp.factory('version', function() {\n\treturn \"0.4.0\";\n});"]}